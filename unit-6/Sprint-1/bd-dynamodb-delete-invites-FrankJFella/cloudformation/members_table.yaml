Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: dynamodbAccessRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - dynamodb:*
              Resource: "*"
            - Effect: Allow
              Action:
              - logs:*
              Resource: "*"
  InitFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: >
          const AWS = require("aws-sdk");
          const response = require('./cfn-response');
          const docClient = new AWS.DynamoDB.DocumentClient();
          exports.handler = function(event, context) {
            console.log(JSON.stringify(event,null,2));
            var params = {
              RequestItems: {
                "DynamoDBDeleteIterators-Members": [
                  {
                    PutRequest: {
                      Item: {
                        id: "8B64EFB5-9847-43E6-BC42-AF39230AB6DE",
                        name: "Dawn Phelps"
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        id: "5C0731C5-4BCE-46B0-94A2-7395E87367EB",
                        name: "Angelica McKinney"
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        id: "78E54327-E5CA-4CD2-AA0D-E478FE961CC9",
                        name: "Alphonse Dietrich"
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        id: "18BD88D4-C256-41F8-80F4-0F69FF61E352",
                        name: "Linette Lopes"
                      }
                    }
                  }
                ]
              }
            };
            docClient.batchWrite(params, function(err, data) {
              if (err) {
                response.send(event, context, "FAILED", {});
              } else {
                response.send(event, context, "SUCCESS", {});
              }
            });
          };
      Handler: index.handler
      Role:
        Fn::GetAtt: [ LambdaRole , "Arn" ]
      # 2020-02-27: [bp] updated from nodejs10.x in case it matters
      Runtime: nodejs12.x
      Timeout: 60
  DynamoDBDeleteIteratorsClassroomMembers:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      TableName: "DynamoDBDeleteIterators-Members"
  InitializeMembersTable:
    Type: Custom::InitFunction
    DependsOn: DynamoDBDeleteIteratorsClassroomMembers
    Properties:
      ServiceToken:
         Fn::GetAtt: [ InitFunction , "Arn" ]
      DynamoTableName:
        Ref: DynamoDBDeleteIteratorsClassroomMembers
